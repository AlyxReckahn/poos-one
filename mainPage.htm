<html>
<head>
	<title>Small Project Main Page Demo</title>

<script type="text/javascript">

// TODO: Implement the JSON and such when the APIs are ready.
function searchContacts()
{
  // First get the data from the user.
  var first = document.getElementById("firstSearch").value;
  var last = document.getElementById("lastSearch").value;
  var phone = document.getElementById("phoneSearch").value;
  var email = document.getElementById("emailSearch").value;

  var result = document.getElementById("searchResult");
  result.innerHTML = ""; // Clear the login result field.

  // This is the array used to store the contacts.
  var contactList = "";

  //This is where we submit the request to the server. TODO: Update UserId to read logged in user's id, using 2 to test for now.
  var jsonPayload = '{"first" : "' + first + '", "last" : "' + last + '", "phone" : "' + phone + '", "email" : "' + email + '", "userID" : "' + '2' + '"}';
  var url = urlBase + '/SearchContact.' + extension;
	
	var xhr = new XMLHttpRequest();
	xhr.open("POST", url, true);
	xhr.setRequestHeader("Content-type", "application/json; charset=UTF-8");
	try
	{
		xhr.onreadystatechange = function() 
		{
			if (this.readyState == 4 && this.status == 200) 
			{
				result.innerHTML = "Contact(s) retrieved.<br>"
				var jsonObject = JSON.parse( xhr.responseText );
				
        // Add the parsed JSON to the contactList array, to fill it with contacts.
				for( var i=0; i<jsonObject.results.length; i++ )
				{
					contactList += jsonObject.results[i];
					if( i < jsonObject.results.length - 1 )
					{
						colorList += "<br />\r\n";
					}

          // For each entry, I show a contact with the text on the left, and Update and Remove buttons on the right.
          result.innerHTML += makeContactFloats(contactList[i], i);
				}

        // If no results were found, say so.
        if (jsonObject.results.length == 0)
        {
            result.innerHTML = "No contacts found.<br>";
        }
		
				document.getElementsByTagName("p")[0].innerHTML = colorList;
			}
		};
		xhr.send(jsonPayload);
	}
	catch(err)
	{
		result.innerHTML = err.message;
	}
  
}

// This function generates a piece of text and two buttons in HTML to add to the display.
function makeContactFloats(entry, index)
{
  // First make the contact information.
  var contactInfo = entry.first + " " + entry.last;
  if (entry.phone != "")
  {
    contactInfo += ", " + entry.phone;
  }

  if (entry.email != "")
  {
    contactInfo += ", " + entry.email;
  }

  // Next make the parameter listss for the two onClick functions. Both of them need the primary key (to know what database entry to act on)
  // and the display index (so that it can update the displayed data without re-fetching), but the Update one also needs the 
  // full data of the entry (to display it as the default data).
  var deleteParams = entry.primKey + ", " + index;
  var updateParams = "'" + entry.first + "', '" + entry.last + "', '" + entry.phone + "', '" + entry.email + "', " + deleteParams;

  // Then we need to give a name to the div to reference it later.
  var divName = "entryDiv" + index;

  // Now plug all these into the HTML.
  var fullContact = '<div id="' + divName + '"><p>' + contactInfo + 
			'</p><span class="fullWidth"><input type=button value="Delete" class="smallButton" onClick="deleteContact(' + 
			deleteParams + ');"><input type=button value="Edit" class="smallButton" onClick="updateContact(' + updateParams + ');"></span></div>';
  return fullContact;
}

// Send the user to the Add Contact page when the click the Add Contact button.
function goToAdd()
{
  location.href = "addContact.html";
}

// TODO: This function needs a modal box and database access.
function updateContact(first, last, phone, email, primKey, index)
{
  alert("TODO: Bring up a modal dialog box with default values '" + first + "', '" + last + "', '" + phone + "', '" + email + 
		"' to update the database entry with key " + primKey + ", and update the div indexed " + index + ".");
}

// TODO: Remove a contact after warning the user.
function deleteContact(entryKey, entryInd)
{
  if(confirm("Do you want to delete this contact?"))
  {
    alert("TODO: Tell the database to delete the entry with key " + entryKey + ".");

    // Remove the entry referred to by setting its display to none.
    document.getElementById("entryDiv" + entryInd).style.display = "none";
  }
}

//TODO: Return the user to the login page and clear their cookie.
function logOut()
{
  alert("TODO: Clear the user's cookie.");
  location.href = "index.html";
}

</script>

<link href="css/styles.css" rel="stylesheet">

    <link href="https://fonts.googleapis.com/css?family=Ubuntu" rel="stylesheet">
</head>
<body>

<h1 id="title">Main Page</h1>

<div id="mainDiv">
	<span id="inner-title"><br></span>
        <span class="fullWidth">
	  <input type="text" id="firstSearch" class="searchBox" placeholder="First name">
          <input type="text" id="lastSearch" class="searchBox" placeholder="Last name">
          <input type="text" id="phoneSearch" class="searchBox" placeholder="Phone number">
          <input type="text" id="emailSearch" class="searchBox" placeholder="Email address">
        </span>
	<input type="button" id="checkButton" class="buttons spaced" value="Search" onClick="searchContacts();">
        <span id="searchResult" class="results"></span>
        <input type="button" id="backButton" class="buttons spaced" value="Add new contact" onClick="goToAdd();">
        <span class="fullWidth">
            <input type="button" class="buttons" id="logoutButton" value="Log out" onClick="logOut();">
        <span>
</div>


</body>
</html>
